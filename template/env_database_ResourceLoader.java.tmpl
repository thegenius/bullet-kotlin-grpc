package {{context.group}}.{{context.project}}.dal;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Optional;

public class ResourceLoader {
    private static Logger log = LoggerFactory.getLogger(ResourceLoader.class);

    private static Optional<String> readToString(InputStream inputStream) {
        try {
            byte[] bytes = new byte[inputStream.available()];
            int cnt = inputStream.read(bytes);
            if (cnt <= 0) {
                return Optional.empty();
            }
            String configContent = new String(bytes);
            return Optional.of(configContent);
        } catch (Exception ex) {
            log.error("readToString error: {}", ex);
            return Optional.empty();
        }
    }

    public static Optional<String> getResource(File file) {
        try {
            InputStream inputStream = new FileInputStream(file);
            return readToString(inputStream);
        } catch (Exception ex) {
            log.error("getResource error: {}", ex);
            return Optional.empty();
        }
    }

    public static Optional<String> getResource(String filename) {
        InputStream inputStream = ClassLoader.getSystemClassLoader().getResourceAsStream(filename);
        return readToString(inputStream);
    }
}
