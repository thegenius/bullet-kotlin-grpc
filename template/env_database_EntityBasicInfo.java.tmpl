/*
 * This file is generated by jOOQ.
 */
package {{context.group}}.{{context.project}}.dal.generated.tables;


import {{context.group}}.{{context.project}}.dal.generated.DefaultSchema;
import {{context.group}}.{{context.project}}.dal.generated.Indexes;
import {{context.group}}.{{context.project}}.dal.generated.Keys;
import {{context.group}}.{{context.project}}.dal.generated.tables.records.EntityBasicInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityBasicInfo extends TableImpl<EntityBasicInfoRecord> {

    private static final long serialVersionUID = 1122539853;

    /**
     * The reference instance of <code>entity_basic_info</code>
     */
    public static final EntityBasicInfo ENTITY_BASIC_INFO = new EntityBasicInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityBasicInfoRecord> getRecordType() {
        return EntityBasicInfoRecord.class;
    }

    /**
     * The column <code>entity_basic_info.id</code>. ??
     */
    public final TableField<EntityBasicInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "??");

    /**
     * The column <code>entity_basic_info.entity_id</code>. ??ID
     */
    public final TableField<EntityBasicInfoRecord, Long> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "??ID");

    /**
     * The column <code>entity_basic_info.nickname</code>. ????
     */
    public final TableField<EntityBasicInfoRecord, String> NICKNAME = createField("nickname", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "????");

    /**
     * The column <code>entity_basic_info.identity_card_no</code>. ?????
     */
    public final TableField<EntityBasicInfoRecord, String> IDENTITY_CARD_NO = createField("identity_card_no", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "?????");

    /**
     * The column <code>entity_basic_info.identity_card_nation</code>. ?????
     */
    public final TableField<EntityBasicInfoRecord, String> IDENTITY_CARD_NATION = createField("identity_card_nation", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "?????");

    /**
     * The column <code>entity_basic_info.first_name</code>. ??
     */
    public final TableField<EntityBasicInfoRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??");

    /**
     * The column <code>entity_basic_info.middle_name</code>. ??
     */
    public final TableField<EntityBasicInfoRecord, String> MIDDLE_NAME = createField("middle_name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??");

    /**
     * The column <code>entity_basic_info.last_name</code>. ??
     */
    public final TableField<EntityBasicInfoRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??");

    /**
     * The column <code>entity_basic_info.is_test</code>. ???????
     */
    public final TableField<EntityBasicInfoRecord, Byte> IS_TEST = createField("is_test", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "???????");

    /**
     * The column <code>entity_basic_info.is_deleted</code>. ??????
     */
    public final TableField<EntityBasicInfoRecord, Byte> IS_DELETED = createField("is_deleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "??????");

    /**
     * The column <code>entity_basic_info.create_zone</code>. ????
     */
    public final TableField<EntityBasicInfoRecord, Integer> CREATE_ZONE = createField("create_zone", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "????");

    /**
     * The column <code>entity_basic_info.update_zone</code>. ????
     */
    public final TableField<EntityBasicInfoRecord, Integer> UPDATE_ZONE = createField("update_zone", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "????");

    /**
     * The column <code>entity_basic_info.create_time</code>. ????
     */
    public final TableField<EntityBasicInfoRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "????");

    /**
     * The column <code>entity_basic_info.update_time</code>. ????
     */
    public final TableField<EntityBasicInfoRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "????");

    /**
     * The column <code>entity_basic_info.create_by</code>. ???
     */
    public final TableField<EntityBasicInfoRecord, Long> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "???");

    /**
     * The column <code>entity_basic_info.update_by</code>. ???
     */
    public final TableField<EntityBasicInfoRecord, Long> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "???");

    /**
     * The column <code>entity_basic_info.version</code>. ??????
     */
    public final TableField<EntityBasicInfoRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????");

    /**
     * Create a <code>entity_basic_info</code> table reference
     */
    public EntityBasicInfo() {
        this(DSL.name("entity_basic_info"), null);
    }

    /**
     * Create an aliased <code>entity_basic_info</code> table reference
     */
    public EntityBasicInfo(String alias) {
        this(DSL.name(alias), ENTITY_BASIC_INFO);
    }

    /**
     * Create an aliased <code>entity_basic_info</code> table reference
     */
    public EntityBasicInfo(Name alias) {
        this(alias, ENTITY_BASIC_INFO);
    }

    private EntityBasicInfo(Name alias, Table<EntityBasicInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityBasicInfo(Name alias, Table<EntityBasicInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> EntityBasicInfo(Table<O> child, ForeignKey<O, EntityBasicInfoRecord> key) {
        super(child, key, ENTITY_BASIC_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENTITY_BASIC_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntityBasicInfoRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_BASIC_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntityBasicInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityBasicInfoRecord>>asList(Keys.KEY_ENTITY_BASIC_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityBasicInfo as(String alias) {
        return new EntityBasicInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityBasicInfo as(Name alias) {
        return new EntityBasicInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityBasicInfo rename(String name) {
        return new EntityBasicInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityBasicInfo rename(Name name) {
        return new EntityBasicInfo(name, null);
    }
}
